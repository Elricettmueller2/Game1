[gd_resource type="VisualShader" load_steps=7 format=3 uid="uid://dg4ui0ua84yw4"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_slb1u"]
frequency = 0.0514
domain_warp_frequency = -1.15

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_6s1dk"]
in_3d_space = true
generate_mipmaps = false
seamless = true
noise = SubResource("FastNoiseLite_slb1u")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_480bk"]
output_port_for_preview = 0
texture = SubResource("NoiseTexture2D_6s1dk")

[sub_resource type="VisualShaderNodeVectorFunc" id="VisualShaderNodeVectorFunc_2746x"]
output_port_for_preview = 0
function = 1

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_j6atb"]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_15v6d"]
output_port_for_preview = 0
input_name = "color"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D tex_frg_2;



void fragment() {
// Input:6
	vec4 n_out6p0 = COLOR;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// VectorFunc:3
	vec3 n_out3p0 = max(min(vec3(n_out2p0.xyz), vec3(1.0)), vec3(0.0));


// VectorOp:5
	vec3 n_out5p0 = vec3(n_out6p0.xyz) * n_out3p0;


// Output:0
	COLOR.rgb = n_out5p0;
	COLOR.a = n_out5p0.x;
	SHADOW_VERTEX = vec2(n_out5p0.xy);


}
"
mode = 1
flags/light_only = false
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_480bk")
nodes/fragment/2/position = Vector2(-460, 240)
nodes/fragment/3/node = SubResource("VisualShaderNodeVectorFunc_2746x")
nodes/fragment/3/position = Vector2(-200, 240)
nodes/fragment/5/node = SubResource("VisualShaderNodeVectorOp_j6atb")
nodes/fragment/5/position = Vector2(100, 120)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_15v6d")
nodes/fragment/6/position = Vector2(-420, -40)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 5, 1, 5, 0, 0, 1, 5, 0, 0, 0, 5, 0, 0, 6, 6, 0, 5, 0)
